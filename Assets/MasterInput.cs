//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/MasterInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @MasterInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @MasterInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""MasterInput"",
    ""maps"": [
        {
            ""name"": ""Pelaaja"",
            ""id"": ""44cbf981-f13f-4654-aadf-b08e730c5154"",
            ""actions"": [
                {
                    ""name"": ""Liikkuminen"",
                    ""type"": ""Value"",
                    ""id"": ""e876f5f0-3439-4dcf-981a-8d8695baf387"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""gamepad"",
                    ""id"": ""89b199bc-37f7-4d6d-ae59-c3a7e2559fe5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Liikkuminen"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""56e51170-3ef2-45c1-b1f7-e29779305650"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Liikkuminen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a35ba3ec-fbf8-489f-9c7b-11657f2dd4e0"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Liikkuminen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""baf03e51-3f87-4d96-a693-987e68f7f3ec"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Liikkuminen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""447c9d3a-81dc-4194-b6bf-25d039ba6730"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Liikkuminen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""nappis"",
                    ""id"": ""5d92cbd4-0bb3-4ce1-894b-00c553edfeb1"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Liikkuminen"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""fc14af3b-2380-41ca-89f5-2a14cb24dd5d"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Liikkuminen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3f5050ec-c6fa-4add-94ba-e48ab2e513f0"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Liikkuminen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""84bbe767-0886-42fd-b52f-0a54d3c5fb78"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Liikkuminen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""772b6afc-b7be-47bf-adfc-9fb773c5020b"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Liikkuminen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""b8abce02-4b13-4cab-ac0b-582a1728858a"",
            ""actions"": [
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""27f9c6a1-4a54-41f2-80ca-daa2365e02ad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Punainen"",
                    ""type"": ""Button"",
                    ""id"": ""43d12394-f411-49d3-abf7-1005f1981308"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Vihrea"",
                    ""type"": ""Button"",
                    ""id"": ""560b1be4-b8f1-4371-abda-33e9bc978034"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Keltainen"",
                    ""type"": ""Button"",
                    ""id"": ""43461de4-caa6-4e87-ab67-6a9df74954ac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""fc1a4b4f-b89f-4d4c-b9ba-5e3623d13b3a"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c40ff49-fff4-4dfe-b69d-9bb6d23553d8"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1b1417c6-5faa-428d-bf1a-d1e43db07dcf"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Punainen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""33d4eb8a-7f95-4f01-8196-fd169a6b2ea2"",
                    ""path"": ""<Keyboard>/quote"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Punainen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a5c0625c-311f-454b-a7df-4b86b80c995b"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vihrea"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd17d826-c71a-4c47-8d94-7bff3873d8c6"",
                    ""path"": ""<Keyboard>/slash"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vihrea"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00e90d00-a598-4fc6-9d70-ab9d8aba168b"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Keltainen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a77b3eb4-3d62-4301-9433-5e87e8a73b5b"",
                    ""path"": ""<Keyboard>/leftBracket"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Keltainen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Pelaaja
        m_Pelaaja = asset.FindActionMap("Pelaaja", throwIfNotFound: true);
        m_Pelaaja_Liikkuminen = m_Pelaaja.FindAction("Liikkuminen", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Pause = m_UI.FindAction("Pause", throwIfNotFound: true);
        m_UI_Punainen = m_UI.FindAction("Punainen", throwIfNotFound: true);
        m_UI_Vihrea = m_UI.FindAction("Vihrea", throwIfNotFound: true);
        m_UI_Keltainen = m_UI.FindAction("Keltainen", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Pelaaja
    private readonly InputActionMap m_Pelaaja;
    private List<IPelaajaActions> m_PelaajaActionsCallbackInterfaces = new List<IPelaajaActions>();
    private readonly InputAction m_Pelaaja_Liikkuminen;
    public struct PelaajaActions
    {
        private @MasterInput m_Wrapper;
        public PelaajaActions(@MasterInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Liikkuminen => m_Wrapper.m_Pelaaja_Liikkuminen;
        public InputActionMap Get() { return m_Wrapper.m_Pelaaja; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PelaajaActions set) { return set.Get(); }
        public void AddCallbacks(IPelaajaActions instance)
        {
            if (instance == null || m_Wrapper.m_PelaajaActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PelaajaActionsCallbackInterfaces.Add(instance);
            @Liikkuminen.started += instance.OnLiikkuminen;
            @Liikkuminen.performed += instance.OnLiikkuminen;
            @Liikkuminen.canceled += instance.OnLiikkuminen;
        }

        private void UnregisterCallbacks(IPelaajaActions instance)
        {
            @Liikkuminen.started -= instance.OnLiikkuminen;
            @Liikkuminen.performed -= instance.OnLiikkuminen;
            @Liikkuminen.canceled -= instance.OnLiikkuminen;
        }

        public void RemoveCallbacks(IPelaajaActions instance)
        {
            if (m_Wrapper.m_PelaajaActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPelaajaActions instance)
        {
            foreach (var item in m_Wrapper.m_PelaajaActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PelaajaActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PelaajaActions @Pelaaja => new PelaajaActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_Pause;
    private readonly InputAction m_UI_Punainen;
    private readonly InputAction m_UI_Vihrea;
    private readonly InputAction m_UI_Keltainen;
    public struct UIActions
    {
        private @MasterInput m_Wrapper;
        public UIActions(@MasterInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Pause => m_Wrapper.m_UI_Pause;
        public InputAction @Punainen => m_Wrapper.m_UI_Punainen;
        public InputAction @Vihrea => m_Wrapper.m_UI_Vihrea;
        public InputAction @Keltainen => m_Wrapper.m_UI_Keltainen;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
            @Punainen.started += instance.OnPunainen;
            @Punainen.performed += instance.OnPunainen;
            @Punainen.canceled += instance.OnPunainen;
            @Vihrea.started += instance.OnVihrea;
            @Vihrea.performed += instance.OnVihrea;
            @Vihrea.canceled += instance.OnVihrea;
            @Keltainen.started += instance.OnKeltainen;
            @Keltainen.performed += instance.OnKeltainen;
            @Keltainen.canceled += instance.OnKeltainen;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
            @Punainen.started -= instance.OnPunainen;
            @Punainen.performed -= instance.OnPunainen;
            @Punainen.canceled -= instance.OnPunainen;
            @Vihrea.started -= instance.OnVihrea;
            @Vihrea.performed -= instance.OnVihrea;
            @Vihrea.canceled -= instance.OnVihrea;
            @Keltainen.started -= instance.OnKeltainen;
            @Keltainen.performed -= instance.OnKeltainen;
            @Keltainen.canceled -= instance.OnKeltainen;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);
    public interface IPelaajaActions
    {
        void OnLiikkuminen(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnPause(InputAction.CallbackContext context);
        void OnPunainen(InputAction.CallbackContext context);
        void OnVihrea(InputAction.CallbackContext context);
        void OnKeltainen(InputAction.CallbackContext context);
    }
}
